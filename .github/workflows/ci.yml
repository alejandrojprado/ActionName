name: CI
on:
  push:
    branches: [ develop, master ]
jobs:
  check-build-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: git fetch --unshallow --tags
            
    - name: Install and run sematic-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo '{
                "branches": ["master"],
                "plugins":[
                  "@semantic-release/commit-analyzer",
                  "@semantic-release/release-notes-generator",
                  ["@semantic-release/exec", { "publish" : "--no-ci -t ${version}" }]
                ]
              }' >> .releaserc
        sudo npm install -g --save-dev semantic-release
        sudo npm -g install @semantic-release/git@8.0.0 @semantic-release/github @semantic-release/exec
        semantic-release --branches master --repository-url ${{ github.repository }}
        
    - name: version tag
      id: version-tag
      run: |
        echo "$(git describe --tag)"
        echo "::set-output name=VERSION_TAG::'$(git describe --tag)'"
        
    - name: latest tag
      id: latest-tag
      run: |
        if [ "${GITHUB_REF:11}" = "develop" ]
        then 
          echo "::set-output name=LATEST_TAG::'-SNAPSHOT'"
        else
          echo "::set-output name=LATEST_TAG::''"
        fi
        
    - name: Build and push Docker image
      run: |
        docker login docker.pkg.github.com -u github.repository_owner --password ${{ github.token }}
        docker build . -t docker.pkg.github.com/${{ github.repository }}/chat-service:${{ steps.version-tag.outputs.VERSION_TAG }}${{ steps.latest-tag.outputs.LATEST_TAG }}
        export repo_name=${{ github.repository }}
        docker push docker.pkg.github.com/"$(echo ${repo_name,,})"/chat-service:${{ steps.version-tag.outputs.VERSION_TAG }}${{ steps.latest-tag.outputs.LATEST_TAG }}
