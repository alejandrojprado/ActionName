name: CI
on:
  push:
    branches: [ develop, master ]
jobs:
  check-build-push:

    runs-on: ubuntu-latest
    steps:
    - name: prepare env
      uses: actions/checkout@v2
    - name: ls
      run: ls -la

    - name: create configuration files
      env:
        NEXUS_USER: ${{ secrets.NEXUS_USER }}
        NEXUS_PASS: ${{ secrets.NEXUS_PASS }}
      run: |
        echo "initscript {
                gradle.settingsEvaluated { settings ->
                    settings.pluginManagement {
                        repositories {
                            maven {
                                url 'https://nexus.mahisoft.com/repository/maven-public/'
                                credentials {
                                    Properties properties = new Properties()
                                    properties.load(new File('./gradle.properties').newDataInputStream())
                                    username properties.mahiNexusUsername
                                    password properties.mahiNexusPassword
                                }
                            }
                            gradlePluginPortal()
                        }
                    }
                }
            }" >> init.gradle
        echo "mahiNexusUsername=$NEXUS_USER
            mahiNexusPassword=$NEXUS_PASS
            sharedMavenUrl=https://nexus.mahisoft.com/repository/maven-public/
            snapshotUploadUrl=https://nexus.mahisoft.com/repository/maven-snapshots/
            releaseUploadUrl=https://nexus.mahisoft.com/repository/maven-releases/" >> gradle.properties
            
    - name: Install and run sematic-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo '{
                "branches": ["master"],
                "plugins":[
                  "@semantic-release/commit-analyzer",
                  "@semantic-release/release-notes-generator",
                  ["@semantic-release/exec", { "publish" : "--no-ci -t ${version}" }]
                ]
              }' >> .releaserc
        sudo npm install -g --save-dev semantic-release
        sudo npm -g install @semantic-release/git@8.0.0 @semantic-release/github @semantic-release/exec
        semantic-release --branches master --repository-url ${{ github.repository }}
        
    - name: version tag
      id: version-tag
      run: |
        if [ "${GITHUB_REF/refs\/tags\//}" = "" ]
        then
          echo no tag
          echo "::set-output name=VERSION_TAG::'0.1.0-${GITHUB_SHA::8}'"
        else
          echo '${GITHUB_REF/refs\/tags\//}'
          echo "::set-output name=VERSION_TAG::'${GITHUB_REF/refs\/tags\//}'"
        fi
        
    - name: latest tag
      id: latest-tag
      run: |
        if [ "${GITHUB_REF:11}" = "develop" ]
        then 
          echo "::set-output name=LATEST_TAG::'-SNAPSHOT'"
        else
          echo "::set-output name=LATEST_TAG::''"
        fi
        
    - name: Build and push Docker image
      run: |
        docker login docker.pkg.github.com -u github.repository_owner --password ${{ github.token }}
        docker build . -t docker.pkg.github.com/${{ github.repository }}/chat-service:${{ steps.version-tag.outputs.VERSION_TAG }}${{ steps.latest-tag.outputs.LATEST_TAG }}
        docker push docker.pkg.github.com/${{ github.repository }}/chat-service:${{ steps.version-tag.outputs.VERSION_TAG }}${{ steps.latest-tag.outputs.LATEST_TAG }}
