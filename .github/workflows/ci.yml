name: CI
on:
  push:
    branches: [ develop, master ]
jobs:

  check-build-push:

    runs-on: ubuntu-latest
    steps:
    - name: iofs
      run: |
        echo "docker.pkg.github.com/alejandrojprado/actionname/chat-service:v1.2.0-66-g69a4f68" > tag_version
      
    - name: save build tag
      uses: actions/upload-artifact@v1
      with:
        name: tag
        path: tag_version 

  deploy:
    needs: check-build-push
    env:
      VPN_SERVER_IPV4: ${{ secrets.VPN_SERVER_IPV4 }}
      PSK: ${{ secrets.PSK }}
      VPN_USERNAME: ${{ secrets.VPN_USERNAME }}
      PSW: ${{ secrets.PSW }}
      KUBE_CONTEXT: ${{ secrets.KUBE_CONFIG }}
      KUBECONFIG: "./config"    
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: replace
      run: |
        sed -ri 's#extensions/v1beta1#apps/v1#g' ./ms-service-sql-ng/templates/deployment.yaml
        cat ./ms-service-sql-ng/templates/deployment.yaml
    - name: install
      run: |
        sudo add-apt-repository ppa:nm-l2tp/network-manager-l2tp
        sudo apt-get install network-manager-l2tp
        
    - name: create file
      run: |
        sudo sed -ri 's/wifi/ethernet/' /usr/lib/NetworkManager/conf.d/10-globally-managed-devices.conf
        sudo service network-manager restart
        sudo nmcli
        
    - name: config nmcli
      run: |
        sudo nmcli connection modify eth0 ipv6.method ignore
        sudo nmcli connection add connection.id CRC7 con-name CRC7 type VPN vpn-type l2tp ifname -- connection.autoconnect no ipv4.method auto vpn.data "gateway = $VPN_SERVER_IPV4 , ipsec-enabled = yes, ipsec-psk = $PSK, mru = 1400, mtu = 1400, password-flags = 0, refuse-chap = yes, refuse-mschap = yes, refuse-pap = yes, require-mppe = yes, user = $VPN_USERNAME" vpn.secrets password=$PSW
    - name: create config file
      run: |
        echo "$KUBE_CONTEXT" > config        
    
    - name: Download tag
      uses: actions/download-artifact@v1
      with:
        name: tag
    
    - name: connect to vpn
      run: |
        sudo nmcli c up CRC7
        
    - name: deploy
      run: |
        helm upgrade -i chat-service-backend ./ms-service-sql-ng/ --reset-values --recreate-pods -f ms-account-service/values.yml --set image.repository="$(echo tag/tag_version)"  --set Deployment.spec.selector.matchLabels.app=chat-service-backend
